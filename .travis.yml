language: python

python:
  - "2.7"
  - "3.5"
  - "3.6"

cache:
  directories:
    - $HOME/.cache
    - $HOME/girder_build/store
    - $HOME/girder_build/data

sudo: required

dist: trusty

services:
  - rabbitmq

before_install:
  # Fix a travis/boto issue.  See
  # https://github.com/travis-ci/travis-ci/issues/7940
  - sudo rm -f /etc/boto.cfg

  - if [ ${TRAVIS_PYTHON_VERSION:0:1} == "3" ]; then export PY3="true"; else export PY2="true"; fi
  - if [ -n "${PY3}" ]; then export MONGO_VERSION=3.6.2; export PY_COVG="OFF"; else export MONGO_VERSION=3.4.10; export PY_COVG="ON"; export DEPLOY=true; fi
  - GIRDER_VERSION=2.x-maintenance
  - GIRDER_WORKER_VERSION=master
  - GIRDER_WORKER_UTILS_VERSION=master

  # Define installation paths
  - large_image_path=$TRAVIS_BUILD_DIR
  - girder_path=$HOME/girder/girder
  - girder_worker_path=$HOME/girder/girder_worker
  - girder_worker_utils_path=$HOME/girder/girder_worker_utils
  - girder_build_path=$HOME/girder_build

  - nvm install v8
  - npm install -g npm

  - git clone https://github.com/girder/girder_worker_utils.git $girder_worker_utils_path && git -C $girder_worker_utils_path checkout $GIRDER_WORKER_UTILS_VERSION

  - git clone https://github.com/girder/girder.git $girder_path && git -C $girder_path checkout $GIRDER_VERSION

  - cd $large_image_path

  - git clone https://github.com/girder/girder_worker.git $girder_worker_path && git -C $girder_worker_path checkout $GIRDER_WORKER_VERSION
  - cp $large_image_path/plugin_tests/test_files/girder_worker.cfg $girder_worker_path/girder_worker/worker.local.cfg
  - pip install --no-cache-dir -U $girder_worker_path
  - pip install --no-cache-dir -U $girder_worker_utils_path'[worker]'
  - pip install $large_image_path/large_image_tasks
  - pip install pyvips -f https://manthey.github.io/large_image_wheels

  - export PY_COVG="ON"
  - CACHE=$HOME/.cache source $girder_path/scripts/install_mongo.sh
  - mkdir /tmp/db
  - mongod --dbpath=/tmp/db >/dev/null 2>/dev/null &
  - mongod --version

  - npm install -g npm
  - npm install -g npm-install-retry
  - npm --version

  - pip install --no-cache-dir -U pip virtualenv

  # Allow access to /etc/fuse.conf by all users
  - sudo chmod a+r /etc/fuse.conf

install:
  - pushd $girder_path
  - pip install --no-cache-dir -U -r requirements-dev.txt -e .[mount]
  - pip install --no-cache-dir -U $girder_worker_utils_path'[girder]'
  - popd
  - girder-install plugin --symlink $large_image_path
  # Install all extras (since "girder-install plugin" does not provide a mechanism to specify them
  - pip install -e $large_image_path[memcached,openslide,mapnik] libtiff==0.5.0 -f https://manthey.github.io/large_image_wheels
  - pip install $large_image_path/large_image_tasks
  - ls -l $girder_path/plugins
  # Make sure we have a prefered version of celery for Girder Worker
  - pip install -U 'celery>=4,<4.2'
  # # Make sure we have a prefered version of cryptography for Girder Worker
  # - pip install -U 'cryptography>=1.7'
  - python -c "import openslide;print(openslide.__version__)"
  # This was
  # - npm install
  # but since there are often connection failures, use the retry package.
  - npm-install-retry
  - NYC_CWD=$large_image_path girder-install web --plugins=jobs,worker,large_image --dev

script:
  - mkdir -p $girder_build_path
  - cd $girder_worker_path
  - python -m girder_worker >/tmp/worker.out 2>&1 &
  - cd $girder_build_path
  - cmake -DPYTHON_COVERAGE:BOOL=${PY_COVG} -DPYTHON_VERSION:STRING=${TRAVIS_PYTHON_VERSION} -DRUN_CORE_TESTS:BOOL="OFF" -DTEST_PLUGINS:STRING="large_image" $girder_path
  - make -j 3
  - JASMINE_TIMEOUT=15000 ctest -VV

after_failure:
  # On failures, show the worker output and other information
  - pip freeze
  - cat /tmp/worker.out

after_success:
  - bash <(curl -s https://codecov.io/bash) -R $large_image_path -s $girder_path
